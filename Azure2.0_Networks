public ip address, virtual network, NSG, NI, 
Azure Bastion, load balancer, DNS, Monitoring

Doubts ?
subnet -> subset of ip addres

**IP Addresses
e.g. 192.168.5.1 -> these numbers are representing binary values. Binary values can only be either 0 or 1.

0000 -> 0
0001 -> 2
0010 -> 4

Octet -> 8 binary values together

Number of possible values -> 
->if u have only one binary value, it can either be 0 or 1.
-> if u have two binary values, it cab be 4 possible values -> 00, 01, 10, 11
-> if u have three binary values,-> 000, 001, 010, 100,...

0   0  1  1  0 0 0 0
128 64 32 16 8 4 2 1 -> Place values => 32+16 => 48

An ip address is 32 bit number, here u have 4 octets of binary values separated by periods. (OneOctet.octet.octet.octet)

11000000 192.
10101000 168.
00110010 50.
00000001 1

We represent IP addresses as numbers because it is easy to read. Every device on a network actually gets an IP address. It helps to identify device on the network even 
at home up wi-fi router that connects to the internet. it also forms a network at devices at home, so your router will actually have its own IP address. 
it will then assign IP addresses onto the devices that are connected onto the router.

first 24 bits of the IP Address to be the network ID, and the last octet represent the host within ur network. u can have a network mask of 255.255.255.0
IP address is used to represent a device on a network. An IP address is representation of 32 bits (8bit.8bit.8bit.8bit/octet.octet.octet.octet). u need to segregate uc IP address based on a network Id and a host ID. 
first 24 bits used for network id to uniquely identify a network and last 8 bits represent host within the network.

Network ID (24 bit) + Host id (8bit)
We can represent the network using CIDR block. 
192.168.50.0/24

***Virtual networks
VM needs to be deployed on to a Virtual network. Virtual network is an isolated network on the cloud.
This is similar to having network on on-premise data center. then u can deploy ur resources onto this network like ur azure VM.

VN -> 10.0.0.0/16
subnet -> 10.0.0.0/24

LAB1 - Create a virtual network,

**** Create Virtual Network
10.0.0.0/16-> address space for virtual network
What does this mean? first 16 bits 10.0 is network id and next 16 bit 0.0 is host id. last /16 bits means 655,36 available ip addresses that can be assigned onto "resources" deployed onto the virtual network.
10.0.0.4 10.0.1.4

As part of VNet, we also need to define subnet, so u can segregate ur workloads within ur vnet via use of subnets. subnet also has IP address range. This IP address is subset of ip adder range of vnet. 
ur resource ur vmachine deployed on to this subnet. 
after deployment of Vnet, u can see additional ip address and subnet can also be added to VNET.

Virtual Network (IP Adrees)
   |           |       |
Subnet       Subnet. subnet
VMachine.    Db
Workload.    Workload

***Concepts of subnet
we can define multiple subnet as part of VNET. Subnet actually helps segregate ur workloads within VNET. We can have the WebServers (workload) located in one subnet 
& DB servers located in another subnet.

Users don't need to connect to DB servers, the web servers internally connect to DB servers.

*** Deploying VMachine to existing VNET 
CReate VNET
Create VMachine -> Our Vnet is on Region:NorthEurope location, so if we want to VMachine to part of the same network then create Vmachine is NorthEurope location only.
                 In Networking -> VNet: Existing VNet, -> Create

**About IP addresses
VMachine has public IP address and also has private IP address.
One subnet hosting WebServer & another subnet hosting DBServer. users accessing WebServer running on machine request from VM, 
for this u need to hv public Ip address. 
Public IP address -> receive/accept request from the internet.

Private IP address -> internal communication between VNet via private IP addresses. 
              Private IP address allow communication across resources within a network. 
              -> web workload/WebServer communicate to DB server via private IP address.
Private IP addresess attached on Netwrok interface resource.
Public IP address attached to Network intf.

-> In Laptop, we have some sort of network card that will receive these ip addresses..
-> All of the traffic between machines going via network interface and hence private ip address attached to the network interface. 
   public ip address is also attached to network interface as well. 
   but public ip address is a separate resource coz the public ip address is assigned to another machine as well.

Azure reserves first 4 IP addresses in each subnet address range.
10.0.0.4

Public Ip addresses allow internet based resources to communicate with azure resources in the network. 2 SKUs or pricing tier for public IP addes basic and standard.

**Dynamic IP address -> Here IP address is only assigned when the public IP address is assigned to a resource. It is released when u stop or delete the resource. 
**Static IP Address -> Here IP address is assigned when it is created itself. The IP address is released when the resource is deleted.
e.g. Lets say we have a web application hosted on VMachine, Now when users trying to access the application, they type DNS name (a user friendly name).
Now u would map this domain name map into this public ip address, now when users typing url then translates to ip address then request goes to Vmachine.
If this was a dynamic IP address, if u had stop the machine and start it again then dynamic ip adres released and new dynamic ip address is assigned. 
if u have static IP address, and stop start machine the addr will not change.
All the traffic between machines going via network interfaces.

LAB -> GO to VM -> Networking -> Network settings -> We hv N/w interface, public ip addr, private ip addr.
Go to N/w interface -> which is a separate resource -> settings-> IP configurations-> ipconfig is attached to N/w interf
u can see private and public ip address. u can see private ip address dynamic is nature. 10.0.0.4(dynamic) -> go to this ipconfig ->
go to public ip address -> settings -> configuration -> check whether ip address is dynamic or static. Bydef when u create VM, it is create static public ip address. ** Adding Secondary Network interface to VMachine
N/w interface assigned with public and private ip address.
U can create new N/w intef and attach to VM.. Why? scenario WebVM machine, one interface for public response and another for private ip address.
LAB -> Go to VM -> Networking -> n/w settings -> Attach New interface -> ( operation can not be performed on running VM, stop the VM)
Go to rsources -> create a N/w interface -> name: sec interface, region should be same as VMachine, same subnet hsting VMachine, -> create it. Come back to VMachine -> Networking -> n/w settings -> Attach New interface.
**Network Security Groups (inbound or outbound rules)
is used to filter traffic between azure resources in an azure VNetwork. It's a kind of lightweight firewall allows to either allow or block incoming connections. U can either create inbound or outbound rules to allow or deny traffic.
VMachine can make request to internet, request can come into ur VMachine, u can create inbound rules to limit the inbound connections on the machine & outbound rules to limit the outbound traffic.
***Rules
1. Name of the rule.
2. Priority: rules r processed in order of priority.
3. Source or destination - IP address, MY IP Address, ServiceJag, ASG (Application Sec group)
4. Protocol - HTTP, TCP, UDP, ICMP, etc.
5. Port Range
6. Action: Allow or Deny
Default Rules -> Inbound sec rules, Outbound sec rules.

File Edit View
H1 E BIG A
**NSG's - Priority Setting Connect to Linux machine -> install nginx -> $sudo apt install nginx -> nginx web server running.
-> add rule in NSG (coz bydefault we can not connect to web server running in machine)
Go to Vmachine -> N/wking -> n/w settings -> Inbound rule: Add Inbound port rule -> Service:HIIP, Action:Allow, Priority:310, -> Add Inbound rule: Add Inbound port rule -> Service:HTTP, Dest port ranges:79-100, Proto: TCP, Action:Deny, Priority: 200-> Add (creating rule to deny traffic to any source to any dest on port 70-100)
(Rule is evaluated first rule that matches that considered in the end and all ignores. lower priority evaluate first)
--> could not see web server.
**NSG-IP Address
Another rule to allow traffic to http port
Service:HIIP, Priority: 190:, Soure:Any, Destinition: IP addr, Detinition IP ader/CIDR: 10.0.0.4(private Ip addces) -> ADD
Allow traffic from anywhere to reach the machine ip address from port 80
Why dest as private IP addrss? -> Public ip addree is just an NI, NI has an private IP address. the request is comes to public ip address but then routed to private ip address thats why mentioned private ip address.
-> Now we can see NGINX Web server
Source: My IP address -> it will detect auto detect what is public ip address assigned on my laptop-> now only me from my laptop can only reach the web server running on web VM machine.
Source: Service Tag, SourceServiceTag: Internet-> I am allowing request from anywhere on the internet to reach destination ip address on web server.
**NSG: Access to other machines - multiple machine
(add subnet for another machine)
GO to Vet -> Settings -> Subnet -> Add new subnet -> Name: Second Subnet1, startingAddr: 10.0.1.0
10.0.0.0/24-> first subnet (last octet used for ip address of machine)
IP addr: 10.0.0.0/16
Staritng Addrs: 10.0.1.0/24 (10.0.1 (network id).0 (host id)/24) -> this is ip address of this new subnet
public subnet -> Add
Create Virtual machine -> region: NorthEurope -> Networking -> VNET: select, Subnet:10.0.1.0/24 -> create the machine.
One NSG attached to one VMachine, and another NSG attached to another VMachine.
Go to VM -> Networking -> N/w settings -> 




One NSG attached to one VMachine, and another NSG attached to another VMachine.
Go to VM -> Networking -> N/w settings -> go to NSG -> Rules -> Delete deny outbound rule.
**NSG: outbound rules
deny all traffic on internet to VM machine.
VM -> N/w settings -> create outbound rule -> OR
Go to NSG -> settings -> outbound rule
Source: IP adrs, Desi-Internet, Desti port: any, Proto:any, Action: Deny -> Add rule
-> Still able to reach web server
-> why connect to web server ? coz of stateful nature of inbound rule, the outgoing req auto allow as well. What is point of out rule ?
go to machine -> package is not getting installed. (not able to send request to internet)
**NSG: Allow ICMP
Can we send ping request from one machine to another.
we need to add rules in order to allow the ping request.
Add inbound sec rule -> source:ip address, source ip addr: 10.0.1.4, Desti: IP Addresses, Dest Ip addr: 10.0.0.4, service:custom, protocol: ICMPv4 (use for ping request), prio:316,-> ADD
**NSG: Subnet
NSG is actually attached to individual Network interfaces. We can also define NSGs at the subnet level.
We can create new NSG group and associate that NSG with both subnets.
We can detach NSGs at the network interface level so that one NSG associate individual subnet.
Step 1 - Create NSG
Step 2 - GO to NSG -> Add 5 Inbound rules on this NSG.
Remove the exising NSG from both the machine and attach newly created NSG to both the machine (webym, appym)
***NSG: Multiple NSGs
Go to web NSG -> Settings -> N/w interfaces -> Attach new N/w intf -> webvm-linux-interf -> Goto IP addr over browser -> unable to connect to nginx server.
File
Edit
View
u should have rules at both level to allow traffic.
**NSG: Windows servers
Deploy 2 windows machine one
Not assigned public ip address.
H1
E BIG AD
Lab -> Create VM1 -> While inside Networking Tab -> attach subnet: webVmSubnet -> public ip address -> NSG None -> Review+Create Create VM2 -> While inside Networking Tab -> attach subnet: appVmSubnet -> public ip address: None -> NSG: None -> review+Create
Connect to VM1 -> Facing issue GO to NSG -> Add inbound rule -> Soucr:My IP address, Destinition: IP Address (of windows based machine), Service: RDP, Action: ALIow, Prio:326,-> ADD
**ASG (Application Security Groups)
These helps to group VM together. Instead of allowing connections to individual machine in NSG's, we can allow access to Application Security Groups. -> Create an ASG, and associate the machines with ASG.
-> Then in NSG, instead of mentioning IP addresses, we can use ASG to group VMs with same purpose and use them.
LAB -> Create ASG -> Name: appnetGroup-ASG -> create
GO to indivual machines -> N/w settings -> ASG configure -> ASG -> Add ASG select -> chose ASG -> Add Go to other VM -> N/w settings -> ASG configure -> -> ASG -> Add ASG select -> chose ASG -> Add
GO to NSG -> Source:IP Addresse, Desinition: ASG, Name: SelectASG name, -> Save (Here instead of mentioning ip addresses, we are mentioning ASG itself).
***Azure Bastion
This is fully managed service that provides secure connections to VMs without the need of public IP Address.
u can establish RDP and SSH connections to VM from the azure portal.
Lab- Create empty subnet within VNetwork for azure bastion service. it is managed service. What will it do? deploy compute m/c in background then connect privately via private ip address.
The subnet has to be name of AzureBastionSubnet.
We disasoociate public ip address from VM.
Also ensure that we don't have any custom NSG's attached to the network interfaces.
LAb -> GO to VM -> Go to VNetwork -> Go to subnets -> create new subnet that will be used by azure bastion service -> subnet purpose:AzureBastion, EnablePrivateSubnet: Untick -> ADD
2) Inside VNetwork -> Select "Bastion" -> Select Configure manually -> name:app-bastion, Tier:basic, VNet:App-netwrok, public ipp addressname:, -> Review.create 3) Go to Ymachine -> disassociate Public Ip address from machine -> Go to public IP address -> Overview -> disassociate.
40 Go to VM -> connect -> connect via Bastion -> Add uname & naswd -> connect 


BI
Ab
4) Go to VM -> connect -> connect via Bastion -> Add uname & paswd -> connect -> (disassociate public ip address, Create subnet in VNet, Bastion configure manually)
**Virtual Network Peering -> Each network is isolated network on cloud. -> [[this service allows u to connect virtual networks together]] Yes different subnets with same VNetwork, Communication is possible. (diff machines same network-> communication possible.)
Suppose we have 2 VNets associated with two VM's, and we want to communicate with these VM's then bydefault this is not possible. (Machines with different network-> communication not possible)
In order to establish comm via azure virtual network peering, this service allows u to connect virtal networks together.. The traffic across the VM's uses the MS backbone network.
u can connect VNetwork same region or across regions.
When peering VNets together, they don't have overlapping CIDR blocks.
VN 10.0.0.0/16, 10.0.1.0/24 -> might not be able to peer together.
Lab -> Create a VM(testvm-linux)with new VNet(name:test-network) -> No public IP -> create
Go to test-network -> Peerings -> Add -> name:test-app-linl, VN:app-network, name: app-test-link, -> click add button (created two peering)
(This we can do from app-network as well, This wizard will create two peering connections, 1 from test-network-> to app-network and another from app-network-> test-network)
GO to VMachine (testvm-linux) => connect via bastion -> here we can use bastion from app-network and able to connect to machine (we r not explicitly create Bastion here)
-> connect the machine and use curl command whether we are able to connect to another machine.
Commands -> sudo apt update
sudo apt install nginx
curl http://private_IP_Address
***User defined routes (All the traffic in VNet needs to be routed through the virtual appliance) VNetwork -> has 3 subnets in place and have VM across subnets.
Data Packet to be routed across macines, has source IP adress (where coming from) and destinition ip addcfess (where to go to). art
How it goes from Source to destinition (traversal part)? -> In VNet has default system routes place ensures the traffic is routed correctly across subnets in VNEtwork. u can create ur own custom routes as well.
Firewall has in one VMachine. ( All the traffic in VNet needs to be routed through the virtual appliance. we can define a user-defined route that makes sure all traffic is routed through the firewall appliance device.


I
VNetwork 3 subnets -> VM1 VM2 VM3 (Firewall)
LAB-> Deploy a new machine -> VM-> name: Centralvm-linux01, region:NU -> Netowrking -> app-network -> create new subnet -> name:central-subnet@1, -> ADD. -> public ip: None, -> create
Create Route table -> create. GO to resource -> settings -> Routes -> Add ->
-> Subnets -> Associate
Go to central VM machine -> N/w settings -> Go to NI -> IP configurations -> Enable IP forwarding -> Apply
Connect this machine using Bastion service -> :wq
Restart machine
***Network Watcher Service ->
Connection Monitor -> check network connectivity between machines.
Next hop -> here u can see next route for a package of data. Helps u understand whether the packet is to the correct destination.
IP Flow Verify -> used to check if a packet is allowed or denied to or from VM. If a pakg is denied u can see which rule is denying the pkg.
Connection troubleshoot -> check connection from VM to VM, fully qualified domain name, URI or IPv4 address.
NSG Diagnostic-> provides detailed information that helps understand and debug the security config of network.
Traffic analytics-> log information about IP traffic flowing through NSG.
NSG Flow Logs -> provide visibility into user and application activity in network.
****Connection troubleshoot
LAB -> Got to Network watcher >> N/w Diagnostic tools -> Connection troubleshoot -> source:appvm-linux01, destntn:webvm-linux01 >> Dest port:80, <> Connection Diagnostic:Connectivity -> Run diagnostic tests.
-> on source machine it has created AzureNetworkWatcher extension.
Connection Monitor -> Provides end-to-end connection monitoring between machines. also between azure VM and On-premise machines, end-to-end monitoring on regular basis then we can use this. Conducting test on regular basis.
LAB-> Go to N/w watcher -> connection monitor -> create -> name: monitor100, location:NorthEurope-> Next -> What r sources and destination, -> add sources-> IYpe:VM, Name: app-vm-linux81 -> Add endpoint,
Add destination -> Type:VM, Name: Testvm -> Add endpoints.
Add Test Configuration -> (Can my apvm-linux machine can coonect to testvm machine on port 80) -> name: TestWeb, TestErequest: EveryMinute. <> Add test Group -> create
I...
**IP Flow Verify
NSG defined at N/w interface level & at the subnet level. Lot of VMs, Multiple rules within NSG -> Problem with rule.
LAB -> Go to N/w watcher -> IP Flow Verify -> Target:Webvm-linux01, NI:.., Verify IP flow -> Test
**Next Hop ()very useful-> if the request are reaching the destination via intended path.
Lab: N/w watcher -> Next hop ->
**NSG Diagnostics -> This helps to understand if traffic is being allowed or denied based on NSGs. It also gives details of evaluation of rules. Similar to IP Flow Verify, one step further.
Lab: Go to N/w watcher -> N/w Diagnostics -> Target: WebVM-linux01, Direction: Inbound, Desti IP: (Webvm-linux machine IP address), Dest port:80, what rule is allowed and what not.
**NSG Flow Logs -> Log information about IP traffic flowing through a NSG.
Lab: Create storage account -> azure Blob -> primary workload:primary native -> create
Go to N/w watcher -> Logs -> Elow logs -> create -> Type:NSG, select storage account -> analytics -> Traffic analytics:10 mins <> create wait for 20 mins
Go to resource -> Log is stored in SA.




